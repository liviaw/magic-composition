[{"/Users/livia/Desktop/magic-composition/src/index.tsx":"1","/Users/livia/Desktop/magic-composition/src/Components/AddMediaIcon/AddMediaIcon.tsx":"2","/Users/livia/Desktop/magic-composition/src/Components/utils.ts":"3","/Users/livia/Desktop/magic-composition/src/Components/Loading/Loading.tsx":"4","/Users/livia/Desktop/magic-composition/src/App.tsx":"5"},{"size":177,"mtime":1611705457259,"results":"6","hashOfConfig":"7"},{"size":1042,"mtime":1611711115772,"results":"8","hashOfConfig":"7"},{"size":587,"mtime":1611711229747,"results":"9","hashOfConfig":"7"},{"size":504,"mtime":1611708341174,"results":"10","hashOfConfig":"7"},{"size":657,"mtime":1611714524417,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"fzgybw",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/livia/Desktop/magic-composition/src/index.tsx",[],["24","25"],"/Users/livia/Desktop/magic-composition/src/Components/AddMediaIcon/AddMediaIcon.tsx",[],"/Users/livia/Desktop/magic-composition/src/Components/utils.ts",[],"/Users/livia/Desktop/magic-composition/src/Components/Loading/Loading.tsx",[],"/Users/livia/Desktop/magic-composition/src/App.tsx",["26","27"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { ImportModal } from \"./Components/ImportModal/ImportModal\";\nimport { Header } from \"./Components/Shared/Header\";\nimport { Container } from \"react-bootstrap\";\nimport { MediaPresenter } from \"./Components/MediaPresenter\";\n\nconst App: React.FC = () => {\n  const [show, setShow] = useState<boolean>(false);\n  const [mediaPresenter, setMediaPresenter] = useState(new MediaPresenter());\n\n  return (\n    <Container fluid className=\"App\">\n      <Header />\n      <ImportModal\n        setShow={setShow}\n        mediaPresenter={mediaPresenter}\n      />\n    </Container>\n  );\n};\n\nexport default App;\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":9,"column":10,"nodeType":"34","messageId":"35","endLine":9,"endColumn":14},{"ruleId":"32","severity":1,"message":"36","line":10,"column":26,"nodeType":"34","messageId":"35","endLine":10,"endColumn":43},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"@typescript-eslint/no-unused-vars","'show' is assigned a value but never used.","Identifier","unusedVar","'setMediaPresenter' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]