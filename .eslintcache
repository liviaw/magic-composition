[{"/Users/livia/Desktop/magic-composition/src/index.tsx":"1","/Users/livia/Desktop/magic-composition/src/Components/Shared/Header.tsx":"2","/Users/livia/Desktop/magic-composition/src/App.tsx":"3","/Users/livia/Desktop/magic-composition/src/Components/ErrorToast/ErrorToast.tsx":"4","/Users/livia/Desktop/magic-composition/src/Components/index.tsx":"5","/Users/livia/Desktop/magic-composition/src/Components/Loading/Loading.tsx":"6","/Users/livia/Desktop/magic-composition/src/Components/utils.ts":"7","/Users/livia/Desktop/magic-composition/src/Components/AddMediaIcon/AddMediaIcon.tsx":"8","/Users/livia/Desktop/magic-composition/src/Components/ImportModal/ImportModal.tsx":"9","/Users/livia/Desktop/magic-composition/src/Components/VideoModal/VideoModal.tsx":"10","/Users/livia/Desktop/magic-composition/src/Components/VideoModal/VideoProgressBar.tsx":"11","/Users/livia/Desktop/magic-composition/src/Components/ImportModal/ViewMedia.tsx":"12","/Users/livia/Desktop/magic-composition/src/Components/MediaWrapper/ImageWrapper.tsx":"13"},{"size":224,"mtime":1610605718852,"results":"14","hashOfConfig":"15"},{"size":357,"mtime":1610548110406,"results":"16","hashOfConfig":"15"},{"size":1428,"mtime":1610669209622,"results":"17","hashOfConfig":"15"},{"size":556,"mtime":1610548110403,"results":"18","hashOfConfig":"15"},{"size":836,"mtime":1610548110409,"results":"19","hashOfConfig":"15"},{"size":504,"mtime":1610548110405,"results":"20","hashOfConfig":"15"},{"size":1810,"mtime":1610670929655,"results":"21","hashOfConfig":"15"},{"size":1255,"mtime":1610548110402,"results":"22","hashOfConfig":"15"},{"size":7015,"mtime":1610548110404,"results":"23","hashOfConfig":"15"},{"size":4156,"mtime":1610670936331,"results":"24","hashOfConfig":"15"},{"size":3547,"mtime":1610532314010,"results":"25","hashOfConfig":"15"},{"size":2133,"mtime":1610612617235,"results":"26","hashOfConfig":"15"},{"size":614,"mtime":1610576870267,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fzgybw",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/livia/Desktop/magic-composition/src/index.tsx",[],"/Users/livia/Desktop/magic-composition/src/Components/Shared/Header.tsx",["60"],"import React, { useState } from \"react\";\nimport styles from \"./shared.module.css\";\nimport canvalogo from \"../../Media/canvalogo.png\";\n\nexport const Header: React.FC = () => (\n  <div className={styles.header}>\n    <img className={styles.canvalogo} src={canvalogo} alt=\"Canva Logo\" />\n    <p className={styles.heading}>Canva Magic Composition</p>\n  </div>\n);\n",["61","62"],"/Users/livia/Desktop/magic-composition/src/App.tsx",["63"],"/Users/livia/Desktop/magic-composition/src/Components/ErrorToast/ErrorToast.tsx",[],"/Users/livia/Desktop/magic-composition/src/Components/index.tsx",[],"/Users/livia/Desktop/magic-composition/src/Components/Loading/Loading.tsx",[],"/Users/livia/Desktop/magic-composition/src/Components/utils.ts",[],"/Users/livia/Desktop/magic-composition/src/Components/AddMediaIcon/AddMediaIcon.tsx",["64","65"],"import React, { useRef } from \"react\";\nimport icon from \"./photo.svg\";\nimport styles from \"./AddMediaIcon.module.css\";\nimport { Media, isImage, isVideo, showError } from \"..\";\n\ntype Props = {\n  createMediaElement: (files: File[]) => void;\n};\n\nexport const AddMediaIcon: React.FC<Props> = ({ createMediaElement }) => {\n  const handleVideoUpload = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    if (event.target.files === null) return;\n    let files: FileList = event.target.files;\n    const addedFiles: File[] = [];\n    for (let i = 0; i < files.length; i++) {\n      if (isImage(files[i]) || isVideo(files[i])) {\n        addedFiles.push(files[i]);\n      } else {\n        showError(\"invalid file \" + files[i].name);\n      }\n    }\n    createMediaElement(addedFiles);\n  };\n  return (\n    <div className={styles.addMediaIconContainer}>\n      <label htmlFor=\"fileUpload\">\n        <div className={styles.addfileButton}>\n          <img className={styles.icon} src={icon} alt=\"add file icon\" />\n          <p> + Add Files </p>\n        </div>\n      </label>\n      <input\n        hidden\n        multiple\n        id=\"fileUpload\"\n        type=\"file\"\n        accept=\"video/* image/*\"\n        onChange={handleVideoUpload}\n      />\n    </div>\n  );\n};\n","/Users/livia/Desktop/magic-composition/src/Components/ImportModal/ImportModal.tsx",[],"/Users/livia/Desktop/magic-composition/src/Components/VideoModal/VideoModal.tsx",["66","67","68","69","70"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { Media, VideoProgressBar, ImageWrapper, isImage, isVideo, audioSound } from \"..\";\nimport {templates} from '../utils';\nimport styles from \"./VideoModal.module.css\";\nimport ReactPlayer from \"react-player\";\nimport ReactAudioPlayer from 'react-audio-player';\n\nlet duration:number = 1000;\n// let musicURL:string = \"../../Audio/ocean/mp3\";\nlet musicURL:string =\"https://www.youtube.com/watch?v=-FKe4vQ4dME&list=RDLeV4u5Y-3ac&index=18\";\n\ntype MediaProps = {\n  file: File;\n  onEnded: () => void;\n};\nconst MediaComponent: React.FC<MediaProps> = ({\n  file,\n  onEnded\n}) => {\n  if (isImage(file)) {\n    return (\n      <ImageWrapper file={file} changeImage={onEnded} duration={duration}/>\n    );\n  } else if (isVideo(file)) {\n    return (\n      <ReactPlayer\n        url={URL.createObjectURL(file)}\n        width=\"100%\"\n        height=\"50%\"\n        playing={true}\n        onError={() => alert(file + \" is unable to play\")}\n        id={file.name}\n        volume={Math.random() * audioSound}\n        onEnded={onEnded}\n      />\n    );\n  }\n  return null;\n};\n\ntype Props = {\n  setShow: React.Dispatch<React.SetStateAction<boolean>>;\n  show: boolean;\n  files: File[];\n  oriDur: {[fileindex: number]: number};\n  totalVideoDuration: number;\n};\nexport const VideoModal: React.FC<Props> = ({\n  setShow,\n  show,\n  files,\n  oriDur,\n  totalVideoDuration,\n}) => {\n  const [mediaCounter, setMediaCounter] = useState<number>(0);\n  const currentFile = files[mediaCounter];\n  // incrementing index of media[]\n  const changeImage = (): void => {\n    // if files are not attached or if video is playing, do not change interval\n    if (files == null) {\n      return;\n    }\n    if (mediaCounter >= files.length - 1) {\n      // clearing interval for media switching within the video\n      setMediaCounter(files.length - 1);\n    } else {\n      // video ended\n      setMediaCounter((mediaCounter) => mediaCounter + 1);\n    }\n  };\n  const template1 = (): void  => {\n    duration = 12000;\n    console.log(\"template 1 - Calm\");\n    // musicURL\n    setMediaCounter(0)\n  }\n\n  const template2 = (): void  => {\n    duration = 3000;\n    console.log(\"template 2 - upbeat\");\n    // musicURL\n    setMediaCounter(0)\n  }\n\n  const template3 = (): void  => {\n    duration = 1000;\n    console.log(\"template 3 - Adventurous\");\n    //musicURL=\n    setMediaCounter(0)\n  }\n\n  return (\n    <Modal centered size=\"lg\" show={show} onHide={() => setShow(false)}>\n      <Modal.Header closeButton>\n        <Modal.Title>Here is your Video</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <div className={styles.renderMediaContainer}>\n      <ReactAudioPlayer\n        src={musicURL}\n        autoPlay\n        controls={true}\n        \n      />\n        {/* file={shuffleArray(currentFile)} */}\n        <MediaComponent file={currentFile} onEnded={changeImage} />\n      </div>\n          <VideoProgressBar totalVideoDuration={Math.round(totalVideoDuration/1000)} />\n          {templates.map((template)=> {\n            console.log(template.title);\n            \n            return (\n            <Button key={template.title} variant=\"outline-dark\" onClick={() => {\n              duration = template.minDuration * 1000;\n              console.log(\"template \" + template.title);\n              // musicURL\n              setMediaCounter(0)\n            }}>\n            {template.title}\n          </Button>)\n          }\n          )}\n          {/* <Button variant=\"outline-dark\" onClick={template1}>\n          template 1: slow/calm\n        </Button>\n        <Button variant=\"outline-dark\" onClick={template2}>\n          template 2: upbeat\n        </Button>\n        <Button variant=\"outline-dark\" onClick={template3}>\n          template 3: Adventurous\n        </Button> */}\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"outline-dark\" onClick={() => setShow(false)}>\n          Close\n        </Button>\n        <Button\n          variant=\"info\"\n          onClick={() => {\n            setShow(false);\n          }}\n        >\n          Save Video\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};","/Users/livia/Desktop/magic-composition/src/Components/VideoModal/VideoProgressBar.tsx",["71","72","73","74"],"import React, { useState, useEffect } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport { useInterval } from 'beautiful-react-hooks'; \n\ntype Props = {\n    totalVideoDuration: number;\n}\n\nexport const VideoProgressBar: React.FC<Props> = ({\n    totalVideoDuration,\n}) => {\n    const [progressInterval, setProgressInterval] = useState<number>(100);\n    const [currentProgressTime, setCurrentProgressTime] = useState<number>(0);\n    const [videoOver, setVideoOver] = useState<boolean>(false);\n    const [barProgress, setBarProgress] = useState<number>(0);\n\n    const updateProgress = () => {\n        if (currentProgressTime >= totalVideoDuration) {\n            // video finishes\n            setBarProgress(100);\n            setVideoOver(true);\n            clearInterval();\n        } else {\n            // updates progress\n            let currentSec = currentProgressTime + progressInterval/1000;\n            setCurrentProgressTime(currentSec);\n            setBarProgress(Math.round(currentSec / totalVideoDuration * 100));\n        }\n    }\n    const [isCleared, clearInterval] = useInterval(updateProgress, progressInterval);\n\n    const formattedTime = (duration: number):string => \n    {   \n        // Hours, minutes and seconds\n        var hrs = Math.floor(duration / 3600);\n        var mins = Math.floor((duration % 3600) / 60);\n        var secs = Math.floor(duration % 60);\n\n        // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n        var ret = \"\";\n\n        if (hrs > 0) {\n            ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n        }\n\n        ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n        ret += \"\" + secs;\n        return ret;\n    }\n    // let ReplayButton:() => JSX.Element = () => <svg id=\"Layer_1\" enable-background=\"new 0 0 516 516\" height=\"200\" viewBox=\"0 0 516 516\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m258 516c-68.228 0-132.572-27.397-181.182-77.145-23.427-23.976-41.84-51.788-54.729-82.664-13.33-31.935-20.089-65.644-20.089-100.191 0-11.046 8.954-20 20-20s20 8.954 20 20c0 121.309 96.897 220 216 220s216-96.897 216-216c0-121.309-96.897-220-216-220-57.404 0-111.88 23.748-153.392 66.87-7.661 7.958-20.321 8.199-28.279.538-7.958-7.66-8.198-20.321-.538-28.278 23.644-24.562 51.089-43.925 81.573-57.553 32.027-14.317 65.886-21.577 100.636-21.577 68.228 0 132.572 27.397 181.182 77.145 23.427 23.976 41.84 51.788 54.729 82.664 13.33 31.935 20.089 65.644 20.089 100.191 0 68.38-26.629 132.668-74.98 181.02-48.353 48.351-112.64 74.98-181.02 74.98zm-119-353c0-11.046-8.954-20-20-20h-57c-11.028 0-20-8.972-20-20v-57c0-11.046-8.954-20-20-20s-20 8.954-20 20v57c0 33.084 26.916 60 60 60h57c11.046 0 20-8.954 20-20z\" fill=\"#0023c4\"/><path d=\"m235.057 350.046c-8.517 0-17.041-2.216-24.849-6.656-15.785-8.976-25.208-25.135-25.208-43.225v-90.33c0-18.09 9.423-34.249 25.208-43.225 15.909-9.047 34.794-8.862 50.518.492l75.915 45.165c15.253 9.076 24.359 25.05 24.359 42.733s-9.106 33.657-24.36 42.732l-75.915 45.165c-8.006 4.763-16.833 7.149-25.668 7.149zm.046-150.043c-2.333 0-4.188.848-5.123 1.379-1.86 1.058-4.98 3.562-4.98 8.453v90.33c0 4.892 3.12 7.396 4.98 8.453 1.556.886 5.677 2.65 10.293-.098l75.915-45.165c4.187-2.49 4.812-6.304 4.812-8.355s-.625-5.865-4.812-8.355l-75.915-45.165c-1.847-1.1-3.614-1.477-5.17-1.477z\" fill=\"#ff5cf3\"/></g></svg>\n    return(\n        <div>\n            {/* {videoOver ? <ReplayButton/> : <></>} */}\n            <ProgressBar now={barProgress} label={formattedTime(currentProgressTime) + \" / \" + formattedTime(totalVideoDuration)} />\n        </div>\n    )\n}\n",["75","76"],"/Users/livia/Desktop/magic-composition/src/Components/ImportModal/ViewMedia.tsx",[],"/Users/livia/Desktop/magic-composition/src/Components/MediaWrapper/ImageWrapper.tsx",["77","78","79"],{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"80","severity":1,"message":"88","line":3,"column":43,"nodeType":"82","messageId":"83","endLine":3,"endColumn":50},{"ruleId":"80","severity":1,"message":"89","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":23},{"ruleId":"80","severity":1,"message":"90","line":4,"column":10,"nodeType":"82","messageId":"83","endLine":4,"endColumn":15},{"ruleId":"80","severity":1,"message":"91","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"90","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":15},{"ruleId":"80","severity":1,"message":"92","line":72,"column":9,"nodeType":"82","messageId":"83","endLine":72,"endColumn":18},{"ruleId":"80","severity":1,"message":"93","line":79,"column":9,"nodeType":"82","messageId":"83","endLine":79,"endColumn":18},{"ruleId":"80","severity":1,"message":"94","line":86,"column":9,"nodeType":"82","messageId":"83","endLine":86,"endColumn":18},{"ruleId":"80","severity":1,"message":"91","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"95","line":12,"column":30,"nodeType":"82","messageId":"83","endLine":12,"endColumn":49},{"ruleId":"80","severity":1,"message":"96","line":14,"column":12,"nodeType":"82","messageId":"83","endLine":14,"endColumn":21},{"ruleId":"80","severity":1,"message":"97","line":30,"column":12,"nodeType":"82","messageId":"83","endLine":30,"endColumn":21},{"ruleId":"84","replacedBy":"98"},{"ruleId":"86","replacedBy":"99"},{"ruleId":"80","severity":1,"message":"100","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":23},{"ruleId":"80","severity":1,"message":"101","line":14,"column":11,"nodeType":"82","messageId":"83","endLine":14,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":17,"column":6,"nodeType":"104","endLine":17,"endColumn":12,"suggestions":"105"},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"'Loading' is defined but never used.","'useRef' is defined but never used.","'Media' is defined but never used.","'useEffect' is defined but never used.","'template1' is assigned a value but never used.","'template2' is assigned a value but never used.","'template3' is assigned a value but never used.","'setProgressInterval' is assigned a value but never used.","'videoOver' is assigned a value but never used.","'isCleared' is assigned a value but never used.",["106"],["107"],"'imageDuration' is defined but never used.","'timeout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeImage' and 'duration'. Either include them or remove the dependency array. If 'changeImage' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [changeImage, duration, file]",{"range":"111","text":"112"},[473,479],"[changeImage, duration, file]"]